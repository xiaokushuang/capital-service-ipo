<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stock.capital.enterprise.common.dao.ViolateManageMapper">
  <resultMap id="BaseResultMap" type="com.stock.capital.enterprise.common.entity.ViolateManage">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="violate_title" jdbcType="VARCHAR" property="violateTitle" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="business_type" jdbcType="VARCHAR" property="businessType" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="punish_time_begin" jdbcType="VARCHAR" property="punishTimeBegin" />
    <result column="punish_time_end" jdbcType="VARCHAR" property="punishTimeEnd" />
    <result column="ignorance_flag" jdbcType="VARCHAR" property="ignoranceFlag" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="disciplinary_type" jdbcType="VARCHAR" property="disciplinaryType" />
    <result column="disciplinary_org" jdbcType="VARCHAR" property="disciplinaryOrg" />
    <result column="violate_type" jdbcType="VARCHAR" property="violateType" />
    <result column="original_url" jdbcType="VARCHAR" property="originalUrl" />
    <result column="news_url" jdbcType="VARCHAR" property="newsUrl" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="is_publish" jdbcType="VARCHAR" property="isPublish" />
    <result column="link_cases" jdbcType="VARCHAR" property="linkCases" />
    <result column="dispatch_time" jdbcType="TIMESTAMP" property="dispatchTime" />
    <result column="bulletin_time" jdbcType="TIMESTAMP" property="bulletinTime" />
    <result column="bulletin_title" jdbcType="VARCHAR" property="bulletinTitle" />
    <result column="belong_trade" jdbcType="VARCHAR" property="belongTrade" />
    <result column="violate_type_value" jdbcType="VARCHAR" property="violateTypeValue" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="if_adopt" jdbcType="VARCHAR" property="ifAdopt" />
    <result column="adopt_condition" jdbcType="VARCHAR" property="adoptCondition" />
    <result column="live_node" jdbcType="VARCHAR" property="liveNode" />
    <result column="punish_organization" jdbcType="VARCHAR" property="punishOrganization" />
    <result column="new_oct_market_flg" jdbcType="VARCHAR" property="newOctMarketFlg" />
    <result column="document_number" jdbcType="VARCHAR" property="documentNumber" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="punish_property" jdbcType="VARCHAR" property="punishProperty" />
    <result column="years" jdbcType="VARCHAR" property="years" />
    <result column="custom_number" jdbcType="VARCHAR" property="customNumber" />
    <result column="link_number" jdbcType="INTEGER" property="linkNumber" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.stock.capital.enterprise.common.entity.ViolateManageWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="violate_laws" jdbcType="LONGVARCHAR" property="violateLaws" />
    <result column="violate_laws_clause" jdbcType="LONGVARCHAR" property="violateLawsClause" />
    <result column="unscramble" jdbcType="LONGVARCHAR" property="unscramble" />
    <result column="averment_view" jdbcType="LONGVARCHAR" property="avermentView" />
    <result column="averment_reply" jdbcType="LONGVARCHAR" property="avermentReply" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, violate_title, company_code, business_type, company_name, punish_time_begin, 
    punish_time_end, ignorance_flag, profile, disciplinary_type, disciplinary_org, violate_type, 
    original_url, news_url, company_id, create_user, create_time, update_user, update_time, 
    status, is_publish, link_cases, dispatch_time, bulletin_time, bulletin_title, belong_trade, 
    violate_type_value, sort, if_adopt, adopt_condition, live_node, punish_organization, 
    new_oct_market_flg, document_number, region, punish_property, years, custom_number, 
    link_number
  </sql>
  <sql id="Blob_Column_List">
    content, violate_laws, violate_laws_clause, unscramble, averment_view, averment_reply
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from violate_manage
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from violate_manage
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample">
    delete from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into violate_manage (id, violate_title, company_code, 
      business_type, company_name, punish_time_begin, 
      punish_time_end, ignorance_flag, profile, 
      disciplinary_type, disciplinary_org, violate_type, 
      original_url, news_url, company_id, 
      create_user, create_time, update_user, 
      update_time, status, is_publish, 
      link_cases, dispatch_time, bulletin_time, 
      bulletin_title, belong_trade, violate_type_value, 
      sort, if_adopt, adopt_condition, 
      live_node, punish_organization, new_oct_market_flg, 
      document_number, region, punish_property, 
      years, custom_number, link_number, 
      content, violate_laws, violate_laws_clause, 
      unscramble, averment_view, averment_reply
      )
    values (#{id,jdbcType=VARCHAR}, #{violateTitle,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, 
      #{businessType,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, #{punishTimeBegin,jdbcType=VARCHAR}, 
      #{punishTimeEnd,jdbcType=VARCHAR}, #{ignoranceFlag,jdbcType=VARCHAR}, #{profile,jdbcType=VARCHAR}, 
      #{disciplinaryType,jdbcType=VARCHAR}, #{disciplinaryOrg,jdbcType=VARCHAR}, #{violateType,jdbcType=VARCHAR}, 
      #{originalUrl,jdbcType=VARCHAR}, #{newsUrl,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{isPublish,jdbcType=VARCHAR}, 
      #{linkCases,jdbcType=VARCHAR}, #{dispatchTime,jdbcType=TIMESTAMP}, #{bulletinTime,jdbcType=TIMESTAMP}, 
      #{bulletinTitle,jdbcType=VARCHAR}, #{belongTrade,jdbcType=VARCHAR}, #{violateTypeValue,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{ifAdopt,jdbcType=VARCHAR}, #{adoptCondition,jdbcType=VARCHAR}, 
      #{liveNode,jdbcType=VARCHAR}, #{punishOrganization,jdbcType=VARCHAR}, #{newOctMarketFlg,jdbcType=VARCHAR}, 
      #{documentNumber,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{punishProperty,jdbcType=VARCHAR}, 
      #{years,jdbcType=VARCHAR}, #{customNumber,jdbcType=VARCHAR}, #{linkNumber,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR}, #{violateLaws,jdbcType=LONGVARCHAR}, #{violateLawsClause,jdbcType=LONGVARCHAR}, 
      #{unscramble,jdbcType=LONGVARCHAR}, #{avermentView,jdbcType=LONGVARCHAR}, #{avermentReply,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into violate_manage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="violateTitle != null">
        violate_title,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="businessType != null">
        business_type,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="punishTimeBegin != null">
        punish_time_begin,
      </if>
      <if test="punishTimeEnd != null">
        punish_time_end,
      </if>
      <if test="ignoranceFlag != null">
        ignorance_flag,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="disciplinaryType != null">
        disciplinary_type,
      </if>
      <if test="disciplinaryOrg != null">
        disciplinary_org,
      </if>
      <if test="violateType != null">
        violate_type,
      </if>
      <if test="originalUrl != null">
        original_url,
      </if>
      <if test="newsUrl != null">
        news_url,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isPublish != null">
        is_publish,
      </if>
      <if test="linkCases != null">
        link_cases,
      </if>
      <if test="dispatchTime != null">
        dispatch_time,
      </if>
      <if test="bulletinTime != null">
        bulletin_time,
      </if>
      <if test="bulletinTitle != null">
        bulletin_title,
      </if>
      <if test="belongTrade != null">
        belong_trade,
      </if>
      <if test="violateTypeValue != null">
        violate_type_value,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="ifAdopt != null">
        if_adopt,
      </if>
      <if test="adoptCondition != null">
        adopt_condition,
      </if>
      <if test="liveNode != null">
        live_node,
      </if>
      <if test="punishOrganization != null">
        punish_organization,
      </if>
      <if test="newOctMarketFlg != null">
        new_oct_market_flg,
      </if>
      <if test="documentNumber != null">
        document_number,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="punishProperty != null">
        punish_property,
      </if>
      <if test="years != null">
        years,
      </if>
      <if test="customNumber != null">
        custom_number,
      </if>
      <if test="linkNumber != null">
        link_number,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="violateLaws != null">
        violate_laws,
      </if>
      <if test="violateLawsClause != null">
        violate_laws_clause,
      </if>
      <if test="unscramble != null">
        unscramble,
      </if>
      <if test="avermentView != null">
        averment_view,
      </if>
      <if test="avermentReply != null">
        averment_reply,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="violateTitle != null">
        #{violateTitle,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="punishTimeBegin != null">
        #{punishTimeBegin,jdbcType=VARCHAR},
      </if>
      <if test="punishTimeEnd != null">
        #{punishTimeEnd,jdbcType=VARCHAR},
      </if>
      <if test="ignoranceFlag != null">
        #{ignoranceFlag,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="disciplinaryType != null">
        #{disciplinaryType,jdbcType=VARCHAR},
      </if>
      <if test="disciplinaryOrg != null">
        #{disciplinaryOrg,jdbcType=VARCHAR},
      </if>
      <if test="violateType != null">
        #{violateType,jdbcType=VARCHAR},
      </if>
      <if test="originalUrl != null">
        #{originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="newsUrl != null">
        #{newsUrl,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null">
        #{isPublish,jdbcType=VARCHAR},
      </if>
      <if test="linkCases != null">
        #{linkCases,jdbcType=VARCHAR},
      </if>
      <if test="dispatchTime != null">
        #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletinTime != null">
        #{bulletinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletinTitle != null">
        #{bulletinTitle,jdbcType=VARCHAR},
      </if>
      <if test="belongTrade != null">
        #{belongTrade,jdbcType=VARCHAR},
      </if>
      <if test="violateTypeValue != null">
        #{violateTypeValue,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="ifAdopt != null">
        #{ifAdopt,jdbcType=VARCHAR},
      </if>
      <if test="adoptCondition != null">
        #{adoptCondition,jdbcType=VARCHAR},
      </if>
      <if test="liveNode != null">
        #{liveNode,jdbcType=VARCHAR},
      </if>
      <if test="punishOrganization != null">
        #{punishOrganization,jdbcType=VARCHAR},
      </if>
      <if test="newOctMarketFlg != null">
        #{newOctMarketFlg,jdbcType=VARCHAR},
      </if>
      <if test="documentNumber != null">
        #{documentNumber,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="punishProperty != null">
        #{punishProperty,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        #{years,jdbcType=VARCHAR},
      </if>
      <if test="customNumber != null">
        #{customNumber,jdbcType=VARCHAR},
      </if>
      <if test="linkNumber != null">
        #{linkNumber,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="violateLaws != null">
        #{violateLaws,jdbcType=LONGVARCHAR},
      </if>
      <if test="violateLawsClause != null">
        #{violateLawsClause,jdbcType=LONGVARCHAR},
      </if>
      <if test="unscramble != null">
        #{unscramble,jdbcType=LONGVARCHAR},
      </if>
      <if test="avermentView != null">
        #{avermentView,jdbcType=LONGVARCHAR},
      </if>
      <if test="avermentReply != null">
        #{avermentReply,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample" resultType="java.lang.Long">
    select count(*) from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update violate_manage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.violateTitle != null">
        violate_title = #{record.violateTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null">
        company_code = #{record.companyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.businessType != null">
        business_type = #{record.businessType,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.punishTimeBegin != null">
        punish_time_begin = #{record.punishTimeBegin,jdbcType=VARCHAR},
      </if>
      <if test="record.punishTimeEnd != null">
        punish_time_end = #{record.punishTimeEnd,jdbcType=VARCHAR},
      </if>
      <if test="record.ignoranceFlag != null">
        ignorance_flag = #{record.ignoranceFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplinaryType != null">
        disciplinary_type = #{record.disciplinaryType,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplinaryOrg != null">
        disciplinary_org = #{record.disciplinaryOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.violateType != null">
        violate_type = #{record.violateType,jdbcType=VARCHAR},
      </if>
      <if test="record.originalUrl != null">
        original_url = #{record.originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.newsUrl != null">
        news_url = #{record.newsUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublish != null">
        is_publish = #{record.isPublish,jdbcType=VARCHAR},
      </if>
      <if test="record.linkCases != null">
        link_cases = #{record.linkCases,jdbcType=VARCHAR},
      </if>
      <if test="record.dispatchTime != null">
        dispatch_time = #{record.dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bulletinTime != null">
        bulletin_time = #{record.bulletinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bulletinTitle != null">
        bulletin_title = #{record.bulletinTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.belongTrade != null">
        belong_trade = #{record.belongTrade,jdbcType=VARCHAR},
      </if>
      <if test="record.violateTypeValue != null">
        violate_type_value = #{record.violateTypeValue,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.ifAdopt != null">
        if_adopt = #{record.ifAdopt,jdbcType=VARCHAR},
      </if>
      <if test="record.adoptCondition != null">
        adopt_condition = #{record.adoptCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.liveNode != null">
        live_node = #{record.liveNode,jdbcType=VARCHAR},
      </if>
      <if test="record.punishOrganization != null">
        punish_organization = #{record.punishOrganization,jdbcType=VARCHAR},
      </if>
      <if test="record.newOctMarketFlg != null">
        new_oct_market_flg = #{record.newOctMarketFlg,jdbcType=VARCHAR},
      </if>
      <if test="record.documentNumber != null">
        document_number = #{record.documentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.punishProperty != null">
        punish_property = #{record.punishProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.years != null">
        years = #{record.years,jdbcType=VARCHAR},
      </if>
      <if test="record.customNumber != null">
        custom_number = #{record.customNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.linkNumber != null">
        link_number = #{record.linkNumber,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.violateLaws != null">
        violate_laws = #{record.violateLaws,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.violateLawsClause != null">
        violate_laws_clause = #{record.violateLawsClause,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.unscramble != null">
        unscramble = #{record.unscramble,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.avermentView != null">
        averment_view = #{record.avermentView,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.avermentReply != null">
        averment_reply = #{record.avermentReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update violate_manage
    set id = #{record.id,jdbcType=VARCHAR},
      violate_title = #{record.violateTitle,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=VARCHAR},
      business_type = #{record.businessType,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      punish_time_begin = #{record.punishTimeBegin,jdbcType=VARCHAR},
      punish_time_end = #{record.punishTimeEnd,jdbcType=VARCHAR},
      ignorance_flag = #{record.ignoranceFlag,jdbcType=VARCHAR},
      profile = #{record.profile,jdbcType=VARCHAR},
      disciplinary_type = #{record.disciplinaryType,jdbcType=VARCHAR},
      disciplinary_org = #{record.disciplinaryOrg,jdbcType=VARCHAR},
      violate_type = #{record.violateType,jdbcType=VARCHAR},
      original_url = #{record.originalUrl,jdbcType=VARCHAR},
      news_url = #{record.newsUrl,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      is_publish = #{record.isPublish,jdbcType=VARCHAR},
      link_cases = #{record.linkCases,jdbcType=VARCHAR},
      dispatch_time = #{record.dispatchTime,jdbcType=TIMESTAMP},
      bulletin_time = #{record.bulletinTime,jdbcType=TIMESTAMP},
      bulletin_title = #{record.bulletinTitle,jdbcType=VARCHAR},
      belong_trade = #{record.belongTrade,jdbcType=VARCHAR},
      violate_type_value = #{record.violateTypeValue,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      if_adopt = #{record.ifAdopt,jdbcType=VARCHAR},
      adopt_condition = #{record.adoptCondition,jdbcType=VARCHAR},
      live_node = #{record.liveNode,jdbcType=VARCHAR},
      punish_organization = #{record.punishOrganization,jdbcType=VARCHAR},
      new_oct_market_flg = #{record.newOctMarketFlg,jdbcType=VARCHAR},
      document_number = #{record.documentNumber,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      punish_property = #{record.punishProperty,jdbcType=VARCHAR},
      years = #{record.years,jdbcType=VARCHAR},
      custom_number = #{record.customNumber,jdbcType=VARCHAR},
      link_number = #{record.linkNumber,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR},
      violate_laws = #{record.violateLaws,jdbcType=LONGVARCHAR},
      violate_laws_clause = #{record.violateLawsClause,jdbcType=LONGVARCHAR},
      unscramble = #{record.unscramble,jdbcType=LONGVARCHAR},
      averment_view = #{record.avermentView,jdbcType=LONGVARCHAR},
      averment_reply = #{record.avermentReply,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update violate_manage
    set id = #{record.id,jdbcType=VARCHAR},
      violate_title = #{record.violateTitle,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=VARCHAR},
      business_type = #{record.businessType,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      punish_time_begin = #{record.punishTimeBegin,jdbcType=VARCHAR},
      punish_time_end = #{record.punishTimeEnd,jdbcType=VARCHAR},
      ignorance_flag = #{record.ignoranceFlag,jdbcType=VARCHAR},
      profile = #{record.profile,jdbcType=VARCHAR},
      disciplinary_type = #{record.disciplinaryType,jdbcType=VARCHAR},
      disciplinary_org = #{record.disciplinaryOrg,jdbcType=VARCHAR},
      violate_type = #{record.violateType,jdbcType=VARCHAR},
      original_url = #{record.originalUrl,jdbcType=VARCHAR},
      news_url = #{record.newsUrl,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      is_publish = #{record.isPublish,jdbcType=VARCHAR},
      link_cases = #{record.linkCases,jdbcType=VARCHAR},
      dispatch_time = #{record.dispatchTime,jdbcType=TIMESTAMP},
      bulletin_time = #{record.bulletinTime,jdbcType=TIMESTAMP},
      bulletin_title = #{record.bulletinTitle,jdbcType=VARCHAR},
      belong_trade = #{record.belongTrade,jdbcType=VARCHAR},
      violate_type_value = #{record.violateTypeValue,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      if_adopt = #{record.ifAdopt,jdbcType=VARCHAR},
      adopt_condition = #{record.adoptCondition,jdbcType=VARCHAR},
      live_node = #{record.liveNode,jdbcType=VARCHAR},
      punish_organization = #{record.punishOrganization,jdbcType=VARCHAR},
      new_oct_market_flg = #{record.newOctMarketFlg,jdbcType=VARCHAR},
      document_number = #{record.documentNumber,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      punish_property = #{record.punishProperty,jdbcType=VARCHAR},
      years = #{record.years,jdbcType=VARCHAR},
      custom_number = #{record.customNumber,jdbcType=VARCHAR},
      link_number = #{record.linkNumber,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageWithBLOBs">
    update violate_manage
    <set>
      <if test="violateTitle != null">
        violate_title = #{violateTitle,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null">
        business_type = #{businessType,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="punishTimeBegin != null">
        punish_time_begin = #{punishTimeBegin,jdbcType=VARCHAR},
      </if>
      <if test="punishTimeEnd != null">
        punish_time_end = #{punishTimeEnd,jdbcType=VARCHAR},
      </if>
      <if test="ignoranceFlag != null">
        ignorance_flag = #{ignoranceFlag,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="disciplinaryType != null">
        disciplinary_type = #{disciplinaryType,jdbcType=VARCHAR},
      </if>
      <if test="disciplinaryOrg != null">
        disciplinary_org = #{disciplinaryOrg,jdbcType=VARCHAR},
      </if>
      <if test="violateType != null">
        violate_type = #{violateType,jdbcType=VARCHAR},
      </if>
      <if test="originalUrl != null">
        original_url = #{originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="newsUrl != null">
        news_url = #{newsUrl,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isPublish != null">
        is_publish = #{isPublish,jdbcType=VARCHAR},
      </if>
      <if test="linkCases != null">
        link_cases = #{linkCases,jdbcType=VARCHAR},
      </if>
      <if test="dispatchTime != null">
        dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletinTime != null">
        bulletin_time = #{bulletinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bulletinTitle != null">
        bulletin_title = #{bulletinTitle,jdbcType=VARCHAR},
      </if>
      <if test="belongTrade != null">
        belong_trade = #{belongTrade,jdbcType=VARCHAR},
      </if>
      <if test="violateTypeValue != null">
        violate_type_value = #{violateTypeValue,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="ifAdopt != null">
        if_adopt = #{ifAdopt,jdbcType=VARCHAR},
      </if>
      <if test="adoptCondition != null">
        adopt_condition = #{adoptCondition,jdbcType=VARCHAR},
      </if>
      <if test="liveNode != null">
        live_node = #{liveNode,jdbcType=VARCHAR},
      </if>
      <if test="punishOrganization != null">
        punish_organization = #{punishOrganization,jdbcType=VARCHAR},
      </if>
      <if test="newOctMarketFlg != null">
        new_oct_market_flg = #{newOctMarketFlg,jdbcType=VARCHAR},
      </if>
      <if test="documentNumber != null">
        document_number = #{documentNumber,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="punishProperty != null">
        punish_property = #{punishProperty,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        years = #{years,jdbcType=VARCHAR},
      </if>
      <if test="customNumber != null">
        custom_number = #{customNumber,jdbcType=VARCHAR},
      </if>
      <if test="linkNumber != null">
        link_number = #{linkNumber,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="violateLaws != null">
        violate_laws = #{violateLaws,jdbcType=LONGVARCHAR},
      </if>
      <if test="violateLawsClause != null">
        violate_laws_clause = #{violateLawsClause,jdbcType=LONGVARCHAR},
      </if>
      <if test="unscramble != null">
        unscramble = #{unscramble,jdbcType=LONGVARCHAR},
      </if>
      <if test="avermentView != null">
        averment_view = #{avermentView,jdbcType=LONGVARCHAR},
      </if>
      <if test="avermentReply != null">
        averment_reply = #{avermentReply,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageWithBLOBs">
    update violate_manage
    set violate_title = #{violateTitle,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      business_type = #{businessType,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      punish_time_begin = #{punishTimeBegin,jdbcType=VARCHAR},
      punish_time_end = #{punishTimeEnd,jdbcType=VARCHAR},
      ignorance_flag = #{ignoranceFlag,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      disciplinary_type = #{disciplinaryType,jdbcType=VARCHAR},
      disciplinary_org = #{disciplinaryOrg,jdbcType=VARCHAR},
      violate_type = #{violateType,jdbcType=VARCHAR},
      original_url = #{originalUrl,jdbcType=VARCHAR},
      news_url = #{newsUrl,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      is_publish = #{isPublish,jdbcType=VARCHAR},
      link_cases = #{linkCases,jdbcType=VARCHAR},
      dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      bulletin_time = #{bulletinTime,jdbcType=TIMESTAMP},
      bulletin_title = #{bulletinTitle,jdbcType=VARCHAR},
      belong_trade = #{belongTrade,jdbcType=VARCHAR},
      violate_type_value = #{violateTypeValue,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      if_adopt = #{ifAdopt,jdbcType=VARCHAR},
      adopt_condition = #{adoptCondition,jdbcType=VARCHAR},
      live_node = #{liveNode,jdbcType=VARCHAR},
      punish_organization = #{punishOrganization,jdbcType=VARCHAR},
      new_oct_market_flg = #{newOctMarketFlg,jdbcType=VARCHAR},
      document_number = #{documentNumber,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      punish_property = #{punishProperty,jdbcType=VARCHAR},
      years = #{years,jdbcType=VARCHAR},
      custom_number = #{customNumber,jdbcType=VARCHAR},
      link_number = #{linkNumber,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      violate_laws = #{violateLaws,jdbcType=LONGVARCHAR},
      violate_laws_clause = #{violateLawsClause,jdbcType=LONGVARCHAR},
      unscramble = #{unscramble,jdbcType=LONGVARCHAR},
      averment_view = #{avermentView,jdbcType=LONGVARCHAR},
      averment_reply = #{avermentReply,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.capital.enterprise.common.entity.ViolateManage">
    update violate_manage
    set violate_title = #{violateTitle,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      business_type = #{businessType,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      punish_time_begin = #{punishTimeBegin,jdbcType=VARCHAR},
      punish_time_end = #{punishTimeEnd,jdbcType=VARCHAR},
      ignorance_flag = #{ignoranceFlag,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      disciplinary_type = #{disciplinaryType,jdbcType=VARCHAR},
      disciplinary_org = #{disciplinaryOrg,jdbcType=VARCHAR},
      violate_type = #{violateType,jdbcType=VARCHAR},
      original_url = #{originalUrl,jdbcType=VARCHAR},
      news_url = #{newsUrl,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      is_publish = #{isPublish,jdbcType=VARCHAR},
      link_cases = #{linkCases,jdbcType=VARCHAR},
      dispatch_time = #{dispatchTime,jdbcType=TIMESTAMP},
      bulletin_time = #{bulletinTime,jdbcType=TIMESTAMP},
      bulletin_title = #{bulletinTitle,jdbcType=VARCHAR},
      belong_trade = #{belongTrade,jdbcType=VARCHAR},
      violate_type_value = #{violateTypeValue,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      if_adopt = #{ifAdopt,jdbcType=VARCHAR},
      adopt_condition = #{adoptCondition,jdbcType=VARCHAR},
      live_node = #{liveNode,jdbcType=VARCHAR},
      punish_organization = #{punishOrganization,jdbcType=VARCHAR},
      new_oct_market_flg = #{newOctMarketFlg,jdbcType=VARCHAR},
      document_number = #{documentNumber,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      punish_property = #{punishProperty,jdbcType=VARCHAR},
      years = #{years,jdbcType=VARCHAR},
      custom_number = #{customNumber,jdbcType=VARCHAR},
      link_number = #{linkNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.capital.enterprise.common.entity.ViolateManageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from violate_manage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>