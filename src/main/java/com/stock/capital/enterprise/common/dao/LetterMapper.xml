<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stock.capital.enterprise.common.dao.LetterMapper">
  <resultMap id="BaseResultMap" type="com.stock.capital.enterprise.common.entity.Letter">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="letter_name" jdbcType="VARCHAR" property="letterName" />
    <result column="letter_name_old" jdbcType="VARCHAR" property="letterNameOld" />
    <result column="letter_org" jdbcType="VARCHAR" property="letterOrg" />
    <result column="letter_date" jdbcType="DATE" property="letterDate" />
    <result column="letter_type" jdbcType="VARCHAR" property="letterType" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="return_date" jdbcType="DATE" property="returnDate" />
    <result column="letter_status" jdbcType="VARCHAR" property="letterStatus" />
    <result column="charge" jdbcType="VARCHAR" property="charge" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="letter_person" jdbcType="VARCHAR" property="letterPerson" />
    <result column="rs_type" jdbcType="VARCHAR" property="rsType" />
    <result column="yn_flag" jdbcType="VARCHAR" property="ynFlag" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="letter_valid" jdbcType="VARCHAR" property="letterValid" />
    <result column="label_status" jdbcType="VARCHAR" property="labelStatus" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="company_reply" jdbcType="VARCHAR" property="companyReply" />
    <result column="letter_file_no" jdbcType="VARCHAR" property="letterFileNo" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="post_status" jdbcType="VARCHAR" property="postStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, letter_name, letter_name_old, letter_org, letter_date, letter_type, end_date, 
    return_date, letter_status, charge, remark, letter_person, rs_type, yn_flag, company_id, 
    company_name, letter_valid, label_status, create_user, create_time, update_user, 
    update_time, status, company_reply, letter_file_no, sort_no, post_status
  </sql>
  <select id="selectByExample" parameterType="com.stock.capital.enterprise.common.entity.LetterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sa_letter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sa_letter
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sa_letter
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.capital.enterprise.common.entity.LetterExample">
    delete from sa_letter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.capital.enterprise.common.entity.Letter">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into sa_letter (id, letter_name, letter_name_old, 
      letter_org, letter_date, letter_type, 
      end_date, return_date, letter_status, 
      charge, remark, letter_person, 
      rs_type, yn_flag, company_id, 
      company_name, letter_valid, label_status, 
      create_user, create_time, update_user, 
      update_time, status, company_reply, 
      letter_file_no, sort_no, post_status
      )
    values (#{id,jdbcType=VARCHAR}, #{letterName,jdbcType=VARCHAR}, #{letterNameOld,jdbcType=VARCHAR}, 
      #{letterOrg,jdbcType=VARCHAR}, #{letterDate,jdbcType=DATE}, #{letterType,jdbcType=VARCHAR}, 
      #{endDate,jdbcType=DATE}, #{returnDate,jdbcType=DATE}, #{letterStatus,jdbcType=VARCHAR}, 
      #{charge,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{letterPerson,jdbcType=VARCHAR}, 
      #{rsType,jdbcType=VARCHAR}, #{ynFlag,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{companyName,jdbcType=VARCHAR}, #{letterValid,jdbcType=VARCHAR}, #{labelStatus,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{companyReply,jdbcType=VARCHAR}, 
      #{letterFileNo,jdbcType=VARCHAR}, #{sortNo,jdbcType=INTEGER}, #{postStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stock.capital.enterprise.common.entity.Letter">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into sa_letter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="letterName != null">
        letter_name,
      </if>
      <if test="letterNameOld != null">
        letter_name_old,
      </if>
      <if test="letterOrg != null">
        letter_org,
      </if>
      <if test="letterDate != null">
        letter_date,
      </if>
      <if test="letterType != null">
        letter_type,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="returnDate != null">
        return_date,
      </if>
      <if test="letterStatus != null">
        letter_status,
      </if>
      <if test="charge != null">
        charge,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="letterPerson != null">
        letter_person,
      </if>
      <if test="rsType != null">
        rs_type,
      </if>
      <if test="ynFlag != null">
        yn_flag,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="letterValid != null">
        letter_valid,
      </if>
      <if test="labelStatus != null">
        label_status,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="companyReply != null">
        company_reply,
      </if>
      <if test="letterFileNo != null">
        letter_file_no,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="postStatus != null">
        post_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="letterName != null">
        #{letterName,jdbcType=VARCHAR},
      </if>
      <if test="letterNameOld != null">
        #{letterNameOld,jdbcType=VARCHAR},
      </if>
      <if test="letterOrg != null">
        #{letterOrg,jdbcType=VARCHAR},
      </if>
      <if test="letterDate != null">
        #{letterDate,jdbcType=DATE},
      </if>
      <if test="letterType != null">
        #{letterType,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        #{returnDate,jdbcType=DATE},
      </if>
      <if test="letterStatus != null">
        #{letterStatus,jdbcType=VARCHAR},
      </if>
      <if test="charge != null">
        #{charge,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="letterPerson != null">
        #{letterPerson,jdbcType=VARCHAR},
      </if>
      <if test="rsType != null">
        #{rsType,jdbcType=VARCHAR},
      </if>
      <if test="ynFlag != null">
        #{ynFlag,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="letterValid != null">
        #{letterValid,jdbcType=VARCHAR},
      </if>
      <if test="labelStatus != null">
        #{labelStatus,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="companyReply != null">
        #{companyReply,jdbcType=VARCHAR},
      </if>
      <if test="letterFileNo != null">
        #{letterFileNo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="postStatus != null">
        #{postStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.capital.enterprise.common.entity.LetterExample" resultType="java.lang.Long">
    select count(*) from sa_letter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sa_letter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.letterName != null">
        letter_name = #{record.letterName,jdbcType=VARCHAR},
      </if>
      <if test="record.letterNameOld != null">
        letter_name_old = #{record.letterNameOld,jdbcType=VARCHAR},
      </if>
      <if test="record.letterOrg != null">
        letter_org = #{record.letterOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.letterDate != null">
        letter_date = #{record.letterDate,jdbcType=DATE},
      </if>
      <if test="record.letterType != null">
        letter_type = #{record.letterType,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.returnDate != null">
        return_date = #{record.returnDate,jdbcType=DATE},
      </if>
      <if test="record.letterStatus != null">
        letter_status = #{record.letterStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.charge != null">
        charge = #{record.charge,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.letterPerson != null">
        letter_person = #{record.letterPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.rsType != null">
        rs_type = #{record.rsType,jdbcType=VARCHAR},
      </if>
      <if test="record.ynFlag != null">
        yn_flag = #{record.ynFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.letterValid != null">
        letter_valid = #{record.letterValid,jdbcType=VARCHAR},
      </if>
      <if test="record.labelStatus != null">
        label_status = #{record.labelStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.companyReply != null">
        company_reply = #{record.companyReply,jdbcType=VARCHAR},
      </if>
      <if test="record.letterFileNo != null">
        letter_file_no = #{record.letterFileNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNo != null">
        sort_no = #{record.sortNo,jdbcType=INTEGER},
      </if>
      <if test="record.postStatus != null">
        post_status = #{record.postStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sa_letter
    set id = #{record.id,jdbcType=VARCHAR},
      letter_name = #{record.letterName,jdbcType=VARCHAR},
      letter_name_old = #{record.letterNameOld,jdbcType=VARCHAR},
      letter_org = #{record.letterOrg,jdbcType=VARCHAR},
      letter_date = #{record.letterDate,jdbcType=DATE},
      letter_type = #{record.letterType,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=DATE},
      return_date = #{record.returnDate,jdbcType=DATE},
      letter_status = #{record.letterStatus,jdbcType=VARCHAR},
      charge = #{record.charge,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      letter_person = #{record.letterPerson,jdbcType=VARCHAR},
      rs_type = #{record.rsType,jdbcType=VARCHAR},
      yn_flag = #{record.ynFlag,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      letter_valid = #{record.letterValid,jdbcType=VARCHAR},
      label_status = #{record.labelStatus,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      company_reply = #{record.companyReply,jdbcType=VARCHAR},
      letter_file_no = #{record.letterFileNo,jdbcType=VARCHAR},
      sort_no = #{record.sortNo,jdbcType=INTEGER},
      post_status = #{record.postStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.capital.enterprise.common.entity.Letter">
    update sa_letter
    <set>
      <if test="letterName != null">
        letter_name = #{letterName,jdbcType=VARCHAR},
      </if>
      <if test="letterNameOld != null">
        letter_name_old = #{letterNameOld,jdbcType=VARCHAR},
      </if>
      <if test="letterOrg != null">
        letter_org = #{letterOrg,jdbcType=VARCHAR},
      </if>
      <if test="letterDate != null">
        letter_date = #{letterDate,jdbcType=DATE},
      </if>
      <if test="letterType != null">
        letter_type = #{letterType,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="returnDate != null">
        return_date = #{returnDate,jdbcType=DATE},
      </if>
      <if test="letterStatus != null">
        letter_status = #{letterStatus,jdbcType=VARCHAR},
      </if>
      <if test="charge != null">
        charge = #{charge,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="letterPerson != null">
        letter_person = #{letterPerson,jdbcType=VARCHAR},
      </if>
      <if test="rsType != null">
        rs_type = #{rsType,jdbcType=VARCHAR},
      </if>
      <if test="ynFlag != null">
        yn_flag = #{ynFlag,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="letterValid != null">
        letter_valid = #{letterValid,jdbcType=VARCHAR},
      </if>
      <if test="labelStatus != null">
        label_status = #{labelStatus,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="companyReply != null">
        company_reply = #{companyReply,jdbcType=VARCHAR},
      </if>
      <if test="letterFileNo != null">
        letter_file_no = #{letterFileNo,jdbcType=VARCHAR},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="postStatus != null">
        post_status = #{postStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.capital.enterprise.common.entity.Letter">
    update sa_letter
    set letter_name = #{letterName,jdbcType=VARCHAR},
      letter_name_old = #{letterNameOld,jdbcType=VARCHAR},
      letter_org = #{letterOrg,jdbcType=VARCHAR},
      letter_date = #{letterDate,jdbcType=DATE},
      letter_type = #{letterType,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=DATE},
      return_date = #{returnDate,jdbcType=DATE},
      letter_status = #{letterStatus,jdbcType=VARCHAR},
      charge = #{charge,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      letter_person = #{letterPerson,jdbcType=VARCHAR},
      rs_type = #{rsType,jdbcType=VARCHAR},
      yn_flag = #{ynFlag,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      letter_valid = #{letterValid,jdbcType=VARCHAR},
      label_status = #{labelStatus,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      company_reply = #{companyReply,jdbcType=VARCHAR},
      letter_file_no = #{letterFileNo,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      post_status = #{postStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.capital.enterprise.common.entity.LetterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sa_letter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>