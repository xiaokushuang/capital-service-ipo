/*!
 * jQuery Validation Bootstrap Tooltip extention v0.9.0 - flicker fix
 *
 * https://github.com/Thrilleratplay/jQuery-Validation-Bootstrap-tooltip
 *
 * Copyright 2015 Tom Hiller
 * Released under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 */
(function($) {
  $.extend(true, $.validator, {
    prototype:{
      defaultShowErrors: function() {
        var _this = this;

        $.each(this.errorList, function(index, value) {
          var currentElement = $(value.element);
          //console.log(this);
          
          if (currentElement.is('input[type="checkbox"]')) {
	          if (currentElement.next().next().data('bs.tooltip') !== undefined) {
	            currentElement.next().next().data('bs.tooltip').options.title = value.message;
	          } else {
	            currentElement.next().next().tooltip(_this.applyTooltipOptions(value.element, value.message));
	          }
	
	          $(value.element).removeClass(_this.settings.validClass).addClass(_this.settings.errorClass);
	          currentElement.next().next().tooltip('show');
	
          } else if (currentElement.is('input[type="radio"]')){
        	  if (currentElement.next().data('bs.tooltip') !== undefined) {
  	            currentElement.next().data('bs.tooltip').options.title = value.message;
  	          } else {
  	            currentElement.next().tooltip(_this.applyTooltipOptions(value.element, value.message));
  	          }
  	
  	          $(value.element).removeClass(_this.settings.validClass).addClass(_this.settings.errorClass);
  	          currentElement.next().tooltip('show');
  	
          } else {
	          if (currentElement.data('bs.tooltip') !== undefined) {
		        currentElement.data('bs.tooltip').options.title = value.message;
	          } else {
	            currentElement.tooltip(_this.applyTooltipOptions(value.element, value.message));
	          }
	
	          $(value.element).removeClass(_this.settings.validClass).addClass(_this.settings.errorClass).tooltip('show');
	
      	  }
          if (_this.settings.highlight) {
        	  _this.settings.highlight.call(_this, value.element, _this.settings.errorClass, _this.settings.validClass);
          }
        });

        $.each(_this.validElements(), function(index, value) {
          $(value).removeClass(_this.settings.errorClass).addClass(_this.settings.validClass);
          if ($(value).is('input[type="checkbox"]')) {
        	  $(value).next().next().tooltip('destroy');
          } else if ($(value).is('input[type="radio"]')) {
        	  
        	  $(value).next().tooltip('destroy');
          } else  {
        	  $(value).tooltip('destroy');
          }
          if (_this.settings.unhighlight) {
            _this.settings.unhighlight.call(_this, value, _this.settings.errorClass, _this.settings.validClass);
          }
        });
      },
      resetForm: function() {
        var _this = this;
        this.submitted = {};
        this.lastElement = null;
        this.prepareForm();
        this.hideErrors();
        this.elements().each(function(index, value){
            $(this).removeClass(_this.settings.errorClass);
            $(this).addClass(_this.settings.validClass);
            $(this).removeData("previousValue");
            $(this).removeAttr("aria-invalid");
            if ($(this).is('input[type="checkbox"]')) {
                  $(this).next().next().tooltip('destroy');
              } else if ($(this).is('input[type="radio"]')) {
                  $(this).next().tooltip('destroy');
              } else  {
                  $(this).tooltip("destroy");
              }
            if (_this.settings.unhighlight) {
                _this.settings.unhighlight.call(_this, value, _this.settings.errorClass, _this.settings.validClass);
            }
        });
      },
        resetElement: function(element) {
            $(element).removeClass(this.settings.errorClass);
            $(element).addClass(this.settings.validClass);
            $(element).removeData("previousValue");
            $(element).removeAttr("aria-invalid");
            if ($(element).is('input[type="checkbox"]')) {
                $(element).next().next().tooltip('destroy');
            } else if ($(element).is('input[type="radio"]')) {
                $(element).next().tooltip('destroy');
            } else  {
                $(element).tooltip("destroy");
            }
            if (this.settings.unhighlight) {
                this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
            }
        },
      applyTooltipOptions: function(element, message) {
        var options = {
          /* Using Twitter Bootstrap Defaults if no settings are given */
          animation: $(element).data('animation') || true,
          html: $(element).data('html') || false,
          placement: $(element).data('placement') || 'top',
          selector: $(element).data('selector') || false,
          title: $(element).attr('title') || message,
          trigger: $.trim('manual ' + ($(element).data('trigger') || '')),
          delay: $(element).data('delay') || 0,
          container: $(element).data('container') || false
        };
        if (this.settings.tooltip_options && this.settings.tooltip_options[element.name]) {
          $.extend(options, this.settings.tooltip_options[element.name]);
        }
        /* jshint ignore:start */
        if (this.settings.tooltip_options && this.settings.tooltip_options['all']) {
          $.extend(options, this.settings.tooltip_options['all']);
        }
        /* jshint ignore:end */

        return options;
      }
    }
  });
}(jQuery));
